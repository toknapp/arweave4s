
version: 2


sbt-build: &sbt-build
  docker:
    - image: hseeberger/scala-sbt:8u151-2.12.4-1.1.1
  steps:
    - run: mkdir ~/.sbt/gpg
    - run: echo $PGP_PUB | base64 --decode --ignore-garbage > ~/.sbt/gpg/secring.asc
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true
        version: 17.09.0-ce
    - restore_cache:
        key: sbt-deps-{{ checksum "build.sbt" }}
    - run: sbt -Xms512m -Xmx2g -XX:+UseConcMarkSweepGC -XX:ReservedCodeCacheSize=256m -XX:+CMSClassUnloadingEnabled -Djava.awt.headless=true -no-colors -batch "$SBT_COMMAND"
    - run: rm ~/.sbt/gpg/secring.asc
    - save_cache:
        key: sbt-deps-{{ checksum "build.sbt" }}
        paths:
          - ~/.m2
          - ~/.ivy2
          - ~/.sbt
    - store_artifacts:
        path: core/target/scala-2.12/api/
        destination: scaladoc/core
    - store_artifacts:
        path: core/target/test-reports/
        destination: test-reports/core
    - store_test_results:
        path: core/target/test-reports/


jobs:

  test:
    <<: *sbt-build
    resource_class: large
    environment:
      SBT_COMMAND: "; compile; clean; coverage; test; coverageReport; coverageAggregate; doc"

  integration-test-fast:
    <<: *sbt-build
    resource_class: large
    environment:
      SBT_COMMAND: "it:testOnly -- -l org.scalatest.tags.Slow"

  integration-test-all:
    <<: *sbt-build
    resource_class: large
    environment:
      SBT_COMMAND: "it:test"

  release-snapshot:
    <<: *sbt-build
    resource_class: large
    environment:
      SBT_COMMAND: "core/publishSigned"

workflows:
  version: 2

  ci:
    jobs:
      - test:
          filters:
            branches:
              ignore: master
              ignore: develop

      - integration-test-fast:
          filters:
            branches:
              ignore: master
              ignore: develop
  cd:
    jobs:
      - test
      - integration-test-fast
      - release-snapshot:
          filters:
            branches:
              only: develop
          requires:
             - test
             - integration-test-fast

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
                - develop
    jobs:
      - test
      - integration-test-all
